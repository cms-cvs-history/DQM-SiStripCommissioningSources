process SiStripOnline = {

//////////////////////////////////////////////////////////////////////////
// Services (including cable map & CRack Geometry)
//////////////////////////////////////////////////////////////////////////

# Message routing 

service = MLlog4cplus { }

service = MessageLogger {
    untracked PSet log4cplus = { untracked string threshold = "DEBUG" }
    untracked vstring debugModules = { "digis","histosA","histosB" } //@@ cannot bear all the debug with geometry, clustering, etc.
    untracked vstring suppressDebug   = { }
    untracked vstring suppressInfo    = { }
    untracked vstring suppressWarning = { }
}

# DQM setup

service = DQMStore { }

service = FUShmDQMOutputService {
    untracked int32 initialMessageBufferSize = 1000000
    double lumiSectionsPerUpdate = 1.0
    bool useCompression = true
    int32 compressionLevel = 1
    untracked int32 lumiSectionInterval = 20
}

# configuration database

service = SiStripConfigDb {
    untracked bool   UsingDb      = true
    untracked bool   UsingDbCache = true
    untracked string SharedMemory = ""
}

# Event Setup Sources and Modules

es_source PedestalsFromConfigDb = SiStripPedestalsBuilderFromDb { }
es_source NoiseFromConfigDb = SiStripNoiseBuilderFromDb { }
es_source FedCablingFromConfigDb = SiStripFedCablingBuilderFromDb {
    untracked string CablingSource = "UNDEFINED"
}

# produce SiStripFecCabling and SiStripDetCabling out of SiStripFedCabling
es_module sistripconn = SiStripConnectivity {}

# magnetic field
include "MagneticField/Engine/data/uniformMagneticField.cfi"
replace UniformMagneticFieldESProducer.ZFieldInTesla = 0.0
es_prefer = UniformMagneticFieldESProducer{}

#Geometry
include "Geometry/CRackTrackerCommonData/data/trackerOnlyGeometryXML_CRack_2DS_5SS6_5SS4.cfi"
include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"
es_module = TrackerRecoGeometryESProducer {}
replace TrackerDigiGeometryESModule.applyAlignment = false

#stripCPE
include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"

#pixelCPE
include "RecoLocalTracker/SiPixelRecHits/data/PixelCPEParmError.cfi"

#TransientTrackingBuilder
include "RecoTracker/TransientTrackingRecHit/data/TransientTrackingRecHitBuilder.cfi"

#MeasurementTracker
include "RecoTracker/MeasurementDet/data/MeasurementTrackerESProducer.cfi"

//////////////////////////////////////////////////////////////////////////
// Input + Raw2Digis
//////////////////////////////////////////////////////////////////////////

source = DaqSource {
    untracked string readerPluginName = "FUShmReader"
    untracked uint32 evtsPerLS = 1000
}

module digis = SiStripRawToDigiModule {
    untracked string ProductLabel = "source"
    untracked string ProductInstance = ""
    untracked bool CreateDigis = true
    untracked int32 AppendedBytes = 0
    untracked int32 FedBufferDumpFreq = 0
    untracked int32 FedEventDumpFreq = 0
    untracked bool UseFedKey = true
    untracked int32 TriggerFedId = -1
}

//////////////////////////////////////////////////////////////////////////
// Runtype filter
//////////////////////////////////////////////////////////////////////////

module trackingRunTypeFilter = SiStripCommissioningRunTypeFilter {
  InputTag InputModuleLabel = digis
  vstring runTypes = { "ApvLatency", "FineDelay" }
}

//////////////////////////////////////////////////////////////////////////
// Local reconstruction
//////////////////////////////////////////////////////////////////////////

include "CalibTracker/Configuration/data/SiStripGain/SiStripGain_Fake.cff"
include "CalibTracker/Configuration/data/SiStripLorentzAngle/SiStripLorentzAngle_Fake.cff"
include "CalibTracker/Configuration/data/SiStripQuality/SiStripQuality_Fake.cff"
include "CalibTracker/Configuration/data/SiPixelLorentzAngle/SiPixelLorentzAngle_Fake.cff"

include "RecoLocalTracker/SiStripZeroSuppression/data/SiStripZeroSuppression.cfi"
replace siStripZeroSuppression.RawDigiProducersList = {
         { string RawDigiProducer = "digis" string RawDigiLabel = "VirginRaw"    }
        ,{ string RawDigiProducer = "digis" string RawDigiLabel = "ProcessedRaw" }
        ,{ string RawDigiProducer = "digis" string RawDigiLabel = "ScopeMode"    }
    }

# include SiStripClusterizer module
include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer_RealData.cfi"
replace siStripClusters.DigiProducersList = {
         { string DigiProducer = "digis"
             string DigiLabel    = "ZeroSuppressed"
         },
         { string DigiProducer = "siStripZeroSuppression"
             string DigiLabel    = "VirginRaw"
         },
         { string DigiProducer = "siStripZeroSuppression"
             string DigiLabel    = "ProcessedRaw"
         },
         { string DigiProducer = "siStripZeroSuppression"
             string DigiLabel    = "ScopeMode"
         }
    }
replace siStripClusters.ChannelThreshold = 2.0
replace siStripClusters.SeedThreshold    = 3.0
replace siStripClusters.ClusterThreshold = 5.0

//////////////////////////////////////////////////////////////////////////
// Tracking
//////////////////////////////////////////////////////////////////////////

# General Tracking
include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"

# Seeds
module cosmicseedfinder = CRackSeedGenerator {
   InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
   InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
   InputTag stereorecHits  = siStripMatchedRecHits:stereoRecHit
   double ptMin=200000 #no ms
   double SeedPt = 1.0
   double originRadius=150
   double originHalfLength=90
   double originZPosition=0
   string TTRHBuilder        =  "WithTrackAngle"
   untracked string GeometricStructure  = "CRACK"
}

# tracking
module cosmictrackfinder = CosmicTrackFinder {
   InputTag cosmicSeeds = cosmicseedfinder
   bool TrajInEvents = true
   InputTag matchedRecHits = siStripMatchedRecHits:matchedRecHit
   InputTag rphirecHits    = siStripMatchedRecHits:rphiRecHit
   InputTag stereorecHits   = siStripMatchedRecHits:stereoRecHit
   InputTag pixelRecHits = dummy:dummy
   int32 MinHits=3 
   double Chi2Cut= 10000.
   string TTRHBuilder    =   "WithTrackAngle"
   untracked string GeometricStructure  = "CRACK"
   # nested parameter set for TransientInitialStateEstimator
   PSet TransientInitialStateEstimatorParameters =
       {
          string propagatorAlongTISE    = "PropagatorWithMaterial"
          string propagatorOppositeTISE = "PropagatorWithMaterialOpposite"
       }
}

//////////////////////////////////////////////////////////////////////////
// fine delay reconstruction
//////////////////////////////////////////////////////////////////////////

module siStripFineDelayHit = SiStripFineDelayHit {
       # general parameters
       bool cosmic = true
       bool MagneticField = false
       string mode = "LatencyScan"
       InputTag ClustersLabel = siStripClusters
       bool NoTracking = false
       # with tracks
         bool TrajInEvent = true
	 string TTRHBuilder = "WithTrackAngle"
         double MaxTrackAngle = 45
         double MinTrackMomentum = 0
         double MaxClusterDistance = 2
         InputTag TracksLabel = cosmictrackfinder
         InputTag SeedsLabel = cosmicseedfinder
           # to avoid the cluster threshold
           bool NoClustering = true
           uint32 ExplorationWindow = 10
           InputTag DigiLabel = siStripZeroSuppression:VirginRaw
       # the label for EventSummary
       InputTag InputModuleLabel = digis
}

//////////////////////////////////////////////////////////////////////////
// Commissioning source
//////////////////////////////////////////////////////////////////////////

module histosA = SiStripCommissioningSource {
        string InputModuleLabel = "digis"
        string SummaryInputModuleLabel = "digis"
        untracked int32 HistoUpdateFreq = 10
        untracked string RootFileName = "SiStripCommissioningSource"
        untracked string CommissioningTask = "UNDEFINED"
}

module histosB = SiStripCommissioningSource {
        string InputModuleLabel = "siStripFineDelayHit"
        string SummaryInputModuleLabel = "digis"
        untracked int32 HistoUpdateFreq = 10
        untracked string RootFileName = "SiStripCommissioningSource"
        untracked string CommissioningTask = "UNDEFINED"
        double SignalToNoiseCut = 3.
}

//////////////////////////////////////////////////////////////////////////
// Commissioning source
//////////////////////////////////////////////////////////////////////////

module consumer = ShmStreamConsumer {
    untracked int32 max_event_size = 7000000
    untracked bool use_compression = true
    untracked int32 compression_level = 1
}

//////////////////////////////////////////////////////////////////////////
// Commissioning path
//////////////////////////////////////////////////////////////////////////

sequence localReco = { siStripZeroSuppression, siStripClusters, siStripMatchedRecHits }
sequence tracking  = { cosmicseedfinder, cosmictrackfinder, siStripFineDelayHit }

path withoutTk = { digis, !trackingRunTypeFilter & histosA }
path withTk    = { digis, trackingRunTypeFilter  & localReco, tracking, histosB }

endpath e1 = { consumer }

//////////////////////////////////////////////////////////////////////////
}

