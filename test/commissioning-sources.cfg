process CommissioningSources = {

#include "FWCore/MessageLogger/data/MessageLogger.cfi"
service = MessageLogger {
	vstring destinations = { "event.log", "error.log", "debug.log" } // names of "log" files 
	untracked PSet error.log = { untracked string threshold = "WARNING" untracked PSet default = { untracked int32 limit = -1 untracked bool noLineBreaks = false } }
	untracked PSet event.log = { untracked string threshold = "INFO"    untracked PSet default = { untracked int32 limit = -1 untracked bool noLineBreaks = false } }
	untracked PSet debug.log = { untracked string threshold = "DEBUG"   untracked PSet default = { untracked int32 limit = -1 untracked bool noLineBreaks = false } }
	vstring debugModules = { "*" }	// comment to inhibit ("time-consuming") debug verbosity 
}

#service = Tracer {} 		// framework debugging...
#service = SimpleMemoryCheck {}	// check memory
#service = SimpleProfiling {}	// subroutine-by-subroutine timing
#service = Timing {}		// module-by-module timing

service = DaqMonitorROOTBackEnd {}				// DQM interface

service = MonitorDaemon {
 	untracked bool   AutoInstantiate = true			// DQM thread in background
        untracked int32  reconnect_delay = 5			// [secs]
	untracked string DestinationAddress = "lxcmse1.cern.ch"	// collector host
        untracked int32  SendPort = 9091			// collector port 
        untracked int32  UpdateDelay = 1000			// monitoring period [ms]
        untracked string NameAsSource = "FU0"			// DQM source name
}

// Populates FED cabling object. 
// If "UsingDb", require database user, passwd and path.
// Else, require input xml file(s).
es_source FedCabling = SiStripFedCablingBuilderFromDb
{ 
	untracked bool   UsingDb = false
	untracked string InputModuleXml = "/data/bainbrid/temp.xml"
}

// Reads "maxEvents" events (-1 = "all") from RU file(s). 
source = TBRUInputSource
{
	untracked vstring fileNames = { "file:/afs/cern.ch/cms/cmt/onlinedev/data/RU0030345_000.root" }
	untracked int32   maxEvents = 1000
	untracked uint32  firstEvent = 1
	#untracked int32   nFeds = 1 // overrides number of FEDs found in RU file(s) 
}

// Extract digis (and "trigger FED" info) from FED buffers.
module RawToDigi = SiStripRawToDigiModule 
{
	string InputModuleLabel = "source"			// module label of "FEDRawData source"
	untracked int32 AppendedBytes = 0			// removes number of bytes appended prior to FED buffer
       	untracked int32 FedBufferDumpFreq = 0			// frequency with which FED buffers are dumped to stdout
       	untracked bool  UseFedKey = true			// switch b/w DetId and FedKey to index digi collections
       	untracked int32 TriggerFedId = 1023			// source id for trigger FED information
}

module DqmSource = SiStripCommissioningSource
{
	string InputModuleLabel = "RawToDigi"			// module label of "Digi source"
	untracked int32 HistoUpdateFreq = 10			// frequency with which DQM histograms are updated 
	untracked string RootFileName = "Source"		// root filename for source histograms 
	#untracked string CommissioningTask = "FED_TIMING"	// overrides commissioning task inferred from data stream
}

module PoolOutput = PoolOutputModule 
{ 
	untracked string fileName ="output.root"  		// output file name
	#untracked vstring outputCommands = { "keep *" }	// make persistent all data types 
}

module Output = OutServ 
{
	untracked int32 maxSize = 100000000			// max number of entries per file 
	untracked uint32 commitInterval = 1000			// frequency with which writing events to disk
}

path p = { RawToDigi, DqmSource }				// defines processing order of plug-in modules
#endpath e = { PoolOutput }					// performed after all modules listed in "path"

}

